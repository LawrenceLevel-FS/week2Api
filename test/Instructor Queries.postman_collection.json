{
	"info": {
		"_postman_id": "ba1b54ab-2b7e-4c02-8f9c-161c598b6ec6",
		"name": "Instructor Queries",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13317617"
	},
	"item": [
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/instructor?sort=name&select=name,email&page=1&limit=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"instructor"
					],
					"query": [
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "select",
							"value": "name,email"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET sorted Instructors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/instructor?sort=name&select=name,email&page=1&limit=30",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"instructor"
					],
					"query": [
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "select",
							"value": "name,email"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET limit to 10 instructors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is an array\", function () {",
							"    var responseBody = pm.response.json();",
							"    pm.expect(responseBody.data).to.be.an('array');",
							"    console.log(responseBody.data)",
							"});",
							"",
							"pm.test(\"Items have required properties\", function () {",
							"    var responseBody = pm.response.json();",
							"    responseBody.data.forEach(function (item) {",
							"        pm.expect(item).to.have.property('name');",
							"        pm.expect(item).to.have.property('email');",
							"    });",
							"});",
							"",
							"pm.test(\"Response contains 10 items\", function () {",
							"        var responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.lengthOf(10);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/instructor?sort=name&select=name,email&page=1&limit=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"instructor"
					],
					"query": [
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "select",
							"value": "name,email"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET select testing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is an array\", function () {",
							"    var responseBody = pm.response.json();",
							"    pm.expect(responseBody.data).to.be.an('array');",
							"    console.log(responseBody.data)",
							"});",
							"",
							"pm.test(\"Items have required properties\", function () {",
							"    var responseBody = pm.response.json();",
							"    responseBody.data.forEach(function (item) {",
							"        pm.expect(item).to.have.property('name');",
							"        pm.expect(item).to.have.property('email');",
							"    });",
							"});",
							"",
							"pm.test(\"Response contains 10 items\", function () {",
							"        var responseBody = pm.response.json();",
							"    pm.expect(responseBody).to.have.lengthOf(10);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/instructor?sort=name&select=name,email&page=1&limit=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"instructor"
					],
					"query": [
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "select",
							"value": "name,email"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		}
	]
}